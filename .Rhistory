library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data from .csv
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
View(movies)
View(movies)
View(movies)
View(movies)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
View(dfm)
View(dfm)
View(dfm)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(def$imdb_rating)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
ggpairs(dfm, columns= 3:6)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
ggpairs(dfm, columns= 6:11)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
#Rating variables
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
#Award variables
ggpairs(dfm, columns= 6:11)
#Audience score vs Gene
#Box Plots for each Genre as well
ggplot(dfm, aes(x=factor(genre), y=audience_score)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
#Rating variables
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
#Award variables
ggpairs(dfm, columns= 6:11)
#Audience score vs. Gene
#Box Plots for each Genre as well
ggplot(dfm, aes(x=factor(genre), y=audience_score)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
#Audience score vs. runtime
ggplot(dfm, aes(x=runtime, y=audience_score)) +
geom_point() + stat_smooth(method=lm, level=0.95)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
#Rating variables
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
#Award variables
ggpairs(dfm, columns= 6:11)
#Audience score vs. Gene
#Box Plots for each Genre as well
ggplot(dfm, aes(x=factor(genre), y=audience_score)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
#Audience score vs. runtime
ggplot(dfm, aes(x=runtime, y=audience_score)) +
geom_point() + stat_smooth(method=lm, level=0.95)
# This plot shows there is a weak correlation, thus we can throw
# out the variable
dfm2 <- dfm[ -c(2, 7:11)]
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
# Load Data
load("movies.Rdata")
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
#Rating variables
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
#Award variables
ggpairs(dfm, columns= 6:11)
#Audience score vs. Gene
#Box Plots for each Genre as well
ggplot(dfm, aes(x=factor(genre), y=audience_score)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
#Audience score vs. runtime
ggplot(dfm, aes(x=runtime, y=audience_score)) +
geom_point() + stat_smooth(method=lm, level=0.95)
# This plot shows there is a weak correlation, thus we can throw
# out the variable
dfm2 <- dfm[ -c(2, 7:11)]
#New list of variables
names(dfm2)
#Adjusted R-Squared approach with backwards elimination
m_full <- lm(audience_score ~ genre + imdb_rating + critics_score
+ audience_rating, data = dfm2)
summary(m_full)
#First round of elimination toawrds adjusted R_squared
m_1noAR <- lm(audience_score ~ genre + imdb_rating + critics_score
, data = dfm2)
#First round of elimination toawrds adjusted R_squared
m_1_noAR <- lm(audience_score ~ genre + imdb_rating + critics_score
, data = dfm2)
summary(m_1_noAR)$adj.r.squared
#Round 2
m_1_noCS <- lm(audience_score ~ genre + imdb_rating + audience_rating,
data = dfm2)
summary(m_1_noCS)$adj.r.squared
#Round 3
#Removing Genre
m_1_noGE <- lm(audience_score ~ imdb_rating + critics_score +
audience_rating, data = dfm2)
summary(m_1_noGE)$adj.r.squared
#Round 3
#Removing IMDB Rating
m_1_noIR <- lm(audience_score ~ genre + critics_score + audience_rating,
data = dfm2)
summary(m_1_noIR)$adj.r.squared
# 1 - Check normal Probablility
qqnorm(m_full$residuals, main="Normality Condition")
qqline(m_full$residuals, main="Normality Condition")
# Library Imports
library(ggplot2)
library(dplyr)
# Library Imports
library(ggplot2)
library(dplyr)
library(statsr)
library(leaps)
library(grid)
library(gridExtra)
library(gridExtra)
setwd("C:/Users/Brandon Renwick/Desktop/data_mining_mini_prj")
# Library Imports
library(ggplot2)
library(dplyr)
library(statsr)
library(leaps)
install.packages("statsr")
# Library Imports
library(ggplot2)
library(dplyr)
library(statsr)
library(leaps)
install.packages("leaps")
library(leaps)
library(grid)
library(gridExtra)
library(GGally)
install.packages("GGally")
library(GGally)
# Omits sections in the data we don't need
# ex: 1:2 removes column 1 to 2
dfm <- movies[ -c(1:2, 5:12, 14:15, 24:32)]
dfm <- na.omit(dfm)
#Shows list of variables left over
str(dfm)
#Histogram of audience score
hist(dfm$audience_score)
#Histogram of IMDB rating
hist(dfm$imdb_rating)
#Histogram of critics score
hist(dfm$critics_score)
#statistical Summaries of different metrics
summary(dfm$audience_score)
summary(dfm$imdb_rating)
summary(dfm$critics_score)
#Pairwise correlation between columns 3-6
#Rating variables
ggpairs(dfm, columns= 3:6)
#Pairwise correlation between columns 6-11
#Award variables
ggpairs(dfm, columns= 6:11)
#Audience score vs. Gene
#Box Plots for each Genre as well
ggplot(dfm, aes(x=factor(genre), y=audience_score)) +
geom_boxplot() + theme(axis.text.x = element_text(angle = 60, hjust = 1))
#Audience score vs. runtime
ggplot(dfm, aes(x=runtime, y=audience_score)) +
geom_point() + stat_smooth(method=lm, level=0.95)
# This plot shows there is a weak correlation, thus we can throw
# out the variable
dfm2 <- dfm[ -c(2, 7:11)]
#New list of variables
names(dfm2)
#Adjusted R-Squared approach with backwards elimination
#How does each variable affect audience_score
m_full <- lm(audience_score ~ genre + imdb_rating + critics_score
+ audience_rating, data = dfm2)
summary(m_full)
#Round 1 of elimination toawrds adjusted R_squared
#Removing audience_rating
m_1_noAR <- lm(audience_score ~ genre + imdb_rating + critics_score
, data = dfm2)
summary(m_1_noAR)$adj.r.squared
#Round 2
#Removing critics_score
m_1_noCS <- lm(audience_score ~ genre + imdb_rating + audience_rating,
data = dfm2)
summary(m_1_noCS)$adj.r.squared
#Round 3
#Removing IMDB Rating
m_1_noIR <- lm(audience_score ~ genre + critics_score + audience_rating,
data = dfm2)
summary(m_1_noIR)$adj.r.squared
#Round 4
#Removing Genre
m_1_noGE <- lm(audience_score ~ imdb_rating + critics_score +
audience_rating, data = dfm2)
summary(m_1_noGE)$adj.r.squared
# 1 - Check normal Probablility
qqnorm(m_full$residuals, main="Normality Condition")
qqline(m_full$residuals, main="Normality Condition")
#Minor Irregularities, no serious outliers
#Minor Irregularities, no serious outliers
#Minor Irregularities, no serious outliers
#Minor Irregularities, no serious outliers
View(dfm)
View(dfm)
